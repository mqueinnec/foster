% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/temporalMetrics.R
\name{temporalMetrics}
\alias{temporalMetrics}
\title{Calculate temporal summary metrics}
\usage{
temporalMetrics(s, metrics = "defaultTemporalSummary", prefix = NULL,
  filename = "", par = F, threads = 2, progress = TRUE, m = 2,
  ...)
}
\arguments{
\item{s}{Input Raster or SpatialPointsDataFrame object containing a time series (may be generated with \code{\link[foster]{calcIndices}})}

\item{metrics}{Name of a function  used to process the time series provided as a character.}

\item{prefix}{Optional. Character that will be added to the names of the output layers}

\item{filename}{Character. Output filename including path to directory and eventually extension}

\item{par}{Logical. Should the function be executed in parallel threads}

\item{threads}{Number of parallel threads used if par = T}

\item{progress}{Logical. If TRUE (default) a progress bar is displayed.}

\item{m}{tuning parameter to determine how many blocks will be used (m blocks will be processed by each cluster)}

\item{...}{Other arguments passed to \code{\link[raster]{writeRaster}}}
}
\description{
This function calculates a set of user-defined or default statistics from a variable time series. If \code{s} is a Raster object, each layer should be a year of the time series. If \code{s} is a SpatialPointsDataFrame object, each column should be a year of the time series. The argument \code{fun} defines which metrics will be calculated. It has to be the name of a function that takes a vector as input and returns a named vector corresponding to the summary metrics. The function \code{defaultTemporalSummary} is used by default and returns the median, IQR and Theil-Sen slope (calculated with \code{\link[wql]{mannKen}}) of the time series.
}
\details{
If \code{s} is a Raster object, the processing can be parallelized using \code{\link[raster]{cluster}}. In that case the user has to set \code{par = TRUE} and provide the number of parallel threads \code{threads}.
}
\examples{

\dontrun{
funSummary <- function(x) {
  c(
    mean = mean(x, na.rm = T),
    median = median(x, na.rm = T),
    std = std(x, na.rm = T)
  )
}

temporalMetrics(s, metrics = "funSummary")
}
}
\seealso{
\code{\link[raster]{calc}}, \code{\link[raster]{cluster}}
}
